{"version":3,"sources":["assets/preloading.png","components/Preloader.js","components/Histogram/HistogramBar.js","components/Histogram/Axis.js","components/D3blackbox.js","components/Histogram/Histogram.js","DataHandling.js","components/CountyMap/County.js","components/CountyMap/CountyMap.js","components/Meta/USStatesMap.js","components/Meta/Title.js","components/Meta/Description.js","components/MedianLine.js","components/Controls/Toggle.js","components/Controls/ControlRow.js","components/Controls/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Preloader","react_default","a","createElement","className","src","PreloaderImg","style","width","alt","HistogramBar","_ref","percent","x","y","height","translate","concat","label","toFixed","replace","transform","textAnchor","D3render","Axis","axis","d3","tickFormat","d","scale","this","props","ticks","data","length","anchorRef","current","call","_React$Component","Blackbox","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","React","createRef","inherits","createClass","key","value","_this$props","ref","Component","Histogram","state","histogram","widthScale","yScale","makeBar","bar","_this$state","axisMargin","x1","x0","Histogram_HistogramBar","_this$state2","bars","map","Histogram_Axis","thresholds","bins","counts","domain","range","bottomMargin","objectSpread","cleanIncome","countyName","USstate","medianIncome","Number","lowerBound","upperBound","dateParse","cleanSalary","employer","submit_date","start_date","case_status","job_title","clean_job_title","base_salary","city","county","countyID","cleanUSStateName","code","id","name","cleanCounty","ChoroplethColors","_","reverse","County","nextProps","nextState","zoom","_this$props2","geoPath","feature","quantize","color","fill","title","CountyMap","projection","usTopoJson","values","us","USstatesMesh","topojson","objects","states","b","counties","features","countyValueMap","fromPairs","CountyMap_County","stroke","strokeLineJoin","USstatePaths","find","USstateNames","centroid","USStatesMap","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","Title","mean","format","d3mean","yearsFragment","USstateFragment","jobTitleFragment","stateFragment","year","filteredBy","toUpperCase","_this$props$filteredB","jobTitle","scaleLinear","d3extent","Description","undefined","allData","filter","getFullYear","deviation","d3deviation","UStateFragment","previousYearFragment","countyFragment","fragment","lastYear","allDataForYear","allDataForJobTitle","allDataForUSstate","Math","abs","byCounty","groupBy","medians","medianIncomesByCounty","ordered","sortBy","keys","items","best","countyMedian","byCity","S","titleCase","s","jobFragment","yearFragment","href","MedianLine","median","line","medianValue","medianLabel","background","Toggle","onClick","ControlRow","makePick","picked","newState","updateDataFilter","capitalize","Controls_Toggle","_this2","toggleNames","_addToggle","Controls","yearFilter","jobTitleFilter","USstateFilter","updateYearFilter","reset","setState","reportUpdateUpTheChain","updateJobTitleFilter","updateUSstateFilter","_window$location$hash","window","location","hash","split","_window$location$hash2","slicedToArray","filters","join","years","Set","jobTitles","USstates","Controls_ControlRow","from","App","techSalaries","medianIncomes","countyNames","salariesFilter","console","log","callback","noop","Promise","all","then","_ref2","medianIncomesMap","forEach","isNull","medianIncomesByUSState","loadAllData","techSalariesMap","medianHousehold","salaries","_this3","components_Preloader","filteredSalaries","filteredSalariesMap","countyValues","countyValue","Meta_Title","Meta_Description","components_CountyMap_CountyMap","components_Histogram_Histogram","components_MedianLine","components_Controls","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f25bc85e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloading.0e87f8f1.png\";","import React, { Component } from \"react\";\n\nimport PreloaderImg from \"../assets/preloading.png\";\n\nconst Preloader = () => {\n  return (\n    <div className=\"App container\">\n      <h1>The average H1B in tech pays $86,164/year</h1>\n      <p className=\"lead\">\n        Since 2012 the US tech industry has sponsored 176,075 H1B work visas.\n        Most of them paid <b>$60,660 to $111,668</b> per year (1 standard\n        deviation).{\" \"}\n        <span>\n          The best city for an H1B is <b>Kirkland, WA</b> with an average\n          individual salary <b>$39,465 above local household median</b>. Median\n          household salary is a good proxy for cost of living in an area.\n        </span>\n      </p>\n      <img src={PreloaderImg} style={{ width: \"100%\" }} alt=\"Loading preview\" />\n      <h2 className=\"text-center\">Loading data ...</h2>\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React from \"react\";\n\nconst HistogramBar = ({ percent, x, y, width, height }) => {\n  let translate = `translate(${x}, ${y})`,\n    label = percent.toFixed(0) + \"%\";\n\n  if (percent < 1) {\n    label = percent.toFixed(2) + \"%\";\n  }\n  if (width < 20) {\n    label = label.replace(\"%\", \"\");\n  }\n  if (width < 10) {\n    label = \"\";\n  }\n  return (\n    <g transform={translate} className=\"bar\">\n      <rect width={width} height={height - 2} transform=\"translate(0,1)\" />\n      <text textAnchor=\"end\" x={width - 5} y={height / 2 + 3}>\n        {label}\n      </text>\n    </g>\n  );\n};\n\nexport default HistogramBar;\n","import * as d3 from \"d3\";\nimport D3blackbox from \"../D3blackbox\";\n\nconst Axis = D3blackbox(function() {\n  const axis = d3\n    .axisLeft()\n    .tickFormat(d => `${d3.format(\".2s\")(d)}`)\n    .scale(this.props.scale)\n    .ticks(this.props.data.length);\n\n  d3.select(this.anchorRef.current).call(axis);\n});\n\nexport default Axis;\n","import React from \"react\";\n\nexport default function D3blackbox(D3render) {\n  return class Blackbox extends React.Component {\n    anchorRef = React.createRef();\n\n    componentDidMount() {\n      D3render.call(this);\n    }\n    componentDidUpdate() {\n      D3render.call(this);\n    }\n\n    render() {\n      const { x, y } = this.props;\n      return <g transform={`translate(${x}, ${y})`} ref={this.anchorRef} />;\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport HistogramBar from \"./HistogramBar\";\nimport Axis from \"./Axis\";\n\nclass Histogram extends Component {\n  state = {\n    histogram: d3.histogram(),\n    widthScale: d3.scaleLinear(),\n    yScale: d3.scaleLinear()\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    let { histogram, widthScale, yScale } = state;\n\n    histogram.thresholds(props.bins).value(props.value);\n\n    const bars = histogram(props.data),\n      counts = bars.map(d => d.length);\n\n    widthScale\n      .domain([d3.min(counts), d3.max(counts)])\n      .range([0, props.width - props.axisMargin]);\n\n    yScale\n      .domain([0, d3.max(bars, d => d.x1)])\n      .range([props.height - props.y - props.bottomMargin, 0]);\n\n    return {\n      ...state,\n      histogram,\n      widthScale,\n      yScale\n    };\n  }\n\n  makeBar = bar => {\n    const { yScale, widthScale } = this.state;\n    let percent = (bar.length / this.props.data.length) * 100;\n\n    let props = {\n      percent,\n      x: this.props.axisMargin,\n      y: yScale(bar.x1),\n      width: widthScale(bar.length),\n      height: yScale(bar.x0) - yScale(bar.x1),\n      key: `histogram-bar-${bar.x0}`\n    };\n\n    return <HistogramBar {...props} />;\n  };\n\n  render() {\n    const { histogram, yScale } = this.state,\n      { x, y, data, axisMargin } = this.props;\n\n    const bars = histogram(data);\n\n    return (\n      <g className=\"histogram\" transform={`translate(${x}, ${y})`}>\n        <g className=\"bars\">{bars.map(this.makeBar)}</g>\n        <Axis x={axisMargin - 3} y={0} data={bars} scale={yScale} />\n      </g>\n    );\n  }\n}\n\nexport default Histogram;\n","import * as d3 from \"d3\";\nimport _ from \"lodash\";\n\nconst cleanIncome = d => ({\n  countyName: d[\"Name\"],\n  USstate: d[\"State\"],\n  medianIncome: Number(d[\"Median Household Income\"]),\n  lowerBound: Number(d[\"90% CI Lower Bound\"]),\n  upperBound: Number(d[\"90% CI Upper Bound\"])\n});\n\nconst dateParse = d3.timeParse(\"%m/%d/%Y\");\n\nconst cleanSalary = d => {\n  if (!d[\"base salary\"] || Number(d[\"base salary\"]) > 300000) {\n    return null;\n  }\n\n  return {\n    employer: d.employer,\n    submit_date: dateParse(d[\"submit date\"]),\n    start_date: dateParse(d[\"start date\"]),\n    case_status: d[\"case status\"],\n    job_title: d[\"job title\"],\n    clean_job_title: d[\"job title\"],\n    base_salary: Number(d[\"base salary\"]),\n    city: d[\"city\"],\n    USstate: d[\"state\"],\n    county: d[\"county\"],\n    countyID: d[\"countyID\"]\n  };\n};\n\nconst cleanUSStateName = d => ({\n  code: d.code,\n  id: Number(d.id),\n  name: d.name\n});\n\nconst cleanCounty = d => ({\n  id: Number(d.id),\n  name: d.name\n});\n\nexport const loadAllData = (callback = _.noop) => {\n  Promise.all([\n    d3.json(\"data/us.json\"),\n    d3.csv(\"data/us-county-names-normalized.csv\", cleanCounty),\n    d3.csv(\"data/county-median-incomes.csv\", cleanIncome),\n    d3.csv(\"data/h1bs-2012-2016.csv\", cleanSalary),\n    d3.tsv(\"data/us-state-names.tsv\", cleanUSStateName)\n  ]).then(([us, countyNames, medianIncomes, techSalaries, USstateNames]) => {\n    let medianIncomesMap = {};\n\n    medianIncomes\n      .filter(d => _.find(countyNames, { name: d[\"countyName\"] }))\n      .forEach(d => {\n        d[\"countyID\"] = _.find(countyNames, { name: d[\"countyName\"] }).id;\n        medianIncomesMap[d.countyID] = d;\n      });\n\n    techSalaries = techSalaries.filter(d => !_.isNull(d));\n\n    callback({\n      usTopoJson: us,\n      countyNames: countyNames,\n      medianIncomes: medianIncomesMap,\n      medianIncomesByCounty: _.groupBy(medianIncomes, \"countyName\"),\n      medianIncomesByUSState: _.groupBy(medianIncomes, \"USstate\"),\n      techSalaries: techSalaries,\n      USstateNames: USstateNames\n    });\n  });\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nconst ChoroplethColors = _.reverse([\n  \"rgb(247,251,255)\",\n  \"rgb(222,235,247)\",\n  \"rgb(198,219,239)\",\n  \"rgb(158,202,225)\",\n  \"rgb(107,174,214)\",\n  \"rgb(66,146,198)\",\n  \"rgb(33,113,181)\",\n  \"rgb(8,81,156)\",\n  \"rgb(8,48,107)\"\n]);\nconst BlankColor = \"rgb(240,240,240)\";\n\nclass County extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const { zoom, value } = this.props;\n\n    return zoom !== nextProps.zoom || value !== nextProps.value;\n  }\n\n  render() {\n    const { value, geoPath, feature, quantize } = this.props;\n\n    let color = BlankColor;\n\n    if (value) {\n      color = ChoroplethColors[quantize(value)];\n    }\n\n    return (\n      <path d={geoPath(feature)} style={{ fill: color }} title={feature.id} />\n    );\n  }\n}\nexport default County;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nimport _ from \"lodash\";\n\nimport County from \"./County\";\n\nclass CountyMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const projection = d3.geoAlbersUsa().scale(1280);\n\n    this.state = {\n      geoPath: d3.geoPath().projection(projection),\n      quantize: d3.scaleQuantize().range(d3.range(9)),\n      projection\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let { projection, quantize, geoPath } = state;\n\n    projection\n      .translate([props.width / 2, props.height / 2])\n      .scale(props.width * 1.3);\n\n    if (props.zoom && props.usTopoJson) {\n      const us = props.usTopoJson,\n        USstatePaths = topojson.feature(us, us.objects.states).features,\n        id = _.find(props.USstateNames, { code: props.zoom }).id;\n\n      projection.scale(props.width * 4.5);\n\n      const centroid = geoPath.centroid(_.find(USstatePaths, { id: id })),\n        translate = projection.translate();\n\n      projection.translate([\n        translate[0] - centroid[0] + props.width / 2,\n        translate[1] - centroid[1] + props.height / 2\n      ]);\n    }\n\n    if (props.values) {\n      quantize.domain([\n        d3.quantile(props.values, 0.15, d => d.value),\n        d3.quantile(props.values, 0.85, d => d.value)\n      ]);\n    }\n\n    return {\n      ...state,\n      projection,\n      quantize\n    };\n  }\n\n  render() {\n    const { usTopoJson, values, zoom } = this.props,\n      { geoPath, quantize } = this.state;\n\n    if (!usTopoJson) {\n      return null;\n    } else {\n      const us = usTopoJson,\n        USstatesMesh = topojson.mesh(us, us.objects.states, (a, b) => a !== b),\n        counties = topojson.feature(us, us.objects.counties).features;\n\n      const countyValueMap = _.fromPairs(\n        values.map(d => [d.countyID, d.value])\n      );\n\n      return (\n        <g>\n          {counties.map(feature => (\n            <County\n              geoPath={geoPath}\n              feature={feature}\n              zoom={zoom}\n              key={feature.id}\n              quantize={quantize}\n              value={countyValueMap[feature.id]}\n            />\n          ))}\n\n          <path\n            d={geoPath(USstatesMesh)}\n            style={{\n              fill: \"none\",\n              stroke: \"#fff\",\n              strokeLineJoin: \"round\"\n            }}\n          />\n        </g>\n      );\n    }\n  }\n}\n\nexport default CountyMap;\n","export default {\n  AL: \"Alabama\",\n  AK: \"Alaska\",\n  AS: \"American Samoa\",\n  AZ: \"Arizona\",\n  AR: \"Arkansas\",\n  CA: \"California\",\n  CO: \"Colorado\",\n  CT: \"Connecticut\",\n  DE: \"Delaware\",\n  DC: \"District Of Columbia\",\n  FM: \"Federated States Of Micronesia\",\n  FL: \"Florida\",\n  GA: \"Georgia\",\n  GU: \"Guam\",\n  HI: \"Hawaii\",\n  ID: \"Idaho\",\n  IL: \"Illinois\",\n  IN: \"Indiana\",\n  IA: \"Iowa\",\n  KS: \"Kansas\",\n  KY: \"Kentucky\",\n  LA: \"Louisiana\",\n  ME: \"Maine\",\n  MH: \"Marshall Islands\",\n  MD: \"Maryland\",\n  MA: \"Massachusetts\",\n  MI: \"Michigan\",\n  MN: \"Minnesota\",\n  MS: \"Mississippi\",\n  MO: \"Missouri\",\n  MT: \"Montana\",\n  NE: \"Nebraska\",\n  NV: \"Nevada\",\n  NH: \"New Hampshire\",\n  NJ: \"New Jersey\",\n  NM: \"New Mexico\",\n  NY: \"New York\",\n  NC: \"North Carolina\",\n  ND: \"North Dakota\",\n  MP: \"Northern Mariana Islands\",\n  OH: \"Ohio\",\n  OK: \"Oklahoma\",\n  OR: \"Oregon\",\n  PW: \"Palau\",\n  PA: \"Pennsylvania\",\n  PR: \"Puerto Rico\",\n  RI: \"Rhode Island\",\n  SC: \"South Carolina\",\n  SD: \"South Dakota\",\n  TN: \"Tennessee\",\n  TX: \"Texas\",\n  UT: \"Utah\",\n  VT: \"Vermont\",\n  VI: \"Virgin Islands\",\n  VA: \"Virginia\",\n  WA: \"Washington\",\n  WV: \"West Virginia\",\n  WI: \"Wisconsin\",\n  WY: \"Wyoming\"\n};\n","import React, { Component } from \"react\";\nimport { scaleLinear } from \"d3-scale\";\nimport { mean as d3mean, extent as d3extent } from \"d3-array\";\nimport USStatesMap from \"./USStatesMap\";\n\nclass Title extends Component {\n  get yearsFragment() {\n    const year = this.props.filteredBy.year;\n\n    return year === \"*\" ? \"\" : `in ${year}`;\n  }\n\n  get USstateFragment() {\n    const USstate = this.props.filteredBy.USstate;\n\n    return USstate === \"*\" ? \"\" : USStatesMap[USstate.toUpperCase()];\n  }\n\n  get jobTitleFragment() {\n    const { jobTitle, year } = this.props.filteredBy;\n    let title = \"\";\n\n    if (jobTitle === \"*\") {\n      if (year === \"*\") {\n        title = \"The average H1B in tech pays\";\n      } else {\n        title = \"The average tech H1B paid\";\n      }\n    } else {\n      title = `Software ${jobTitle}s on an H1B`;\n      if (year === \"*\") {\n        title += \" make\";\n      } else {\n        title += \" made\";\n      }\n    }\n\n    return title;\n  }\n\n  get format() {\n    return scaleLinear()\n      .domain(d3extent(this.props.data, d => d.base_salary))\n      .tickFormat();\n  }\n\n  render() {\n    const mean = this.format(d3mean(this.props.data, d => d.base_salary));\n\n    let title;\n\n    if (this.yearsFragment && this.USstateFragment) {\n      title = (\n        <h2>\n          In {this.USstateFragment}, {this.jobTitleFragment}${mean}/year{\" \"}\n          {this.yearsFragment}\n        </h2>\n      );\n    } else {\n      title = (\n        <h2>\n          {this.jobTitleFragment} ${mean}/year\n          {this.USstateFragment ? `in ${this.stateFragment}` : \"\"}\n          {this.yearsFragment}\n        </h2>\n      );\n    }\n\n    return title;\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport { scaleLinear } from \"d3-scale\";\nimport {\n  mean as d3mean,\n  extent as d3extent,\n  deviation as d3deviation\n} from \"d3-array\";\nimport _ from \"lodash\";\nimport S from \"string\";\n\nimport USStatesMap from \"./USStatesMap\";\n\nclass Description extends React.Component {\n  allDataForYear(year, data = this.props.allData) {\n    return data.filter(d => d.submit_date.getFullYear() === year);\n  }\n\n  allDataForJobTitle(jobTitle, data = this.props.allData) {\n    return data.filter(d => d.clean_job_title === jobTitle);\n  }\n\n  allDataForUSstate(USstate, data = this.props.allData) {\n    return data.filter(d => d.USstate === USstate);\n  }\n\n  get yearsFragment() {\n    const year = this.props.filteredBy.year;\n\n    return year === \"*\" ? \"\" : `In ${year}`;\n  }\n\n  get USstateFragment() {\n    const USstate = this.props.filteredBy.USstate;\n\n    return USstate === \"*\" ? \"\" : USStatesMap[USstate.toUpperCase()];\n  }\n\n  get previousYearFragment() {\n    const year = this.props.filteredBy.year;\n\n    let fragment;\n\n    if (year === \"*\") {\n      fragment = \"\";\n    } else if (year === 2012) {\n      fragment = \"\";\n    } else {\n      const { USstate, jobTitle } = this.props.filteredBy;\n      let lastYear = this.allDataForYear(year - 1);\n\n      if (jobTitle !== \"*\") {\n        lastYear = this.allDataForJobTitle(jobTitle, lastYear);\n      }\n\n      if (USstate !== \"*\") {\n        lastYear = this.allDataForUSstate(USstate, lastYear);\n      }\n\n      if (this.props.data.length / lastYear.length > 2) {\n        fragment =\n          \", \" +\n          (this.props.data.length / lastYear.length).toFixed() +\n          \" times more than the year before\";\n      } else {\n        const percent = (\n          (1 - lastYear.length / this.props.data.length) *\n          100\n        ).toFixed();\n\n        fragment =\n          \", \" +\n          Math.abs(percent) +\n          \"% \" +\n          (percent > 0 ? \"more\" : \"less\") +\n          \" than the year before\";\n      }\n    }\n\n    return fragment;\n  }\n\n  get jobTitleFragment() {\n    const jobTitle = this.props.filteredBy.jobTitle;\n    let fragment;\n\n    if (jobTitle === \"*\") {\n      fragment = \"H1B work visas\";\n    } else {\n      if (jobTitle === \"other\") {\n        fragment = \"H1B work visas\";\n      } else {\n        fragment = `H1B work visas for software ${jobTitle}s`;\n      }\n    }\n\n    return fragment;\n  }\n\n  get countyFragment() {\n    const byCounty = _.groupBy(this.props.data, \"countyID\"),\n      medians = this.props.medianIncomesByCounty;\n\n    let ordered = _.sortBy(\n      _.keys(byCounty)\n        .map(county => byCounty[county])\n        .filter(d => d.length / this.props.data.length > 0.01),\n      items =>\n        d3mean(items, d => d.base_salary) -\n        medians[items[0].countyID][0].medianIncome\n    );\n\n    let best = ordered[ordered.length - 1],\n      countyMedian = medians[best[0].countyID][0].medianIncome;\n\n    const byCity = _.groupBy(best, \"city\");\n\n    ordered = _.sortBy(\n      _.keys(byCity)\n        .map(city => byCity[city])\n        .filter(d => d.length / best.length > 0.01),\n      items => d3mean(items, d => d.base_salary) - countyMedian\n    );\n\n    best = ordered[ordered.length - 1];\n\n    const city = S(best[0].city).titleCase().s + `, ${best[0].USstate}`,\n      mean = d3mean(best, d => d.base_salary);\n\n    const jobFragment = this.jobTitleFragment\n      .replace(\"H1B work visas for\", \"\")\n      .replace(\"H1B work visas\", \"\");\n\n    return (\n      <span>\n        The best city{\" \"}\n        {jobFragment.length ? `for ${jobFragment} on an H1B` : \"for an H1B\"}{\" \"}\n        {this.yearFragment ? \"was\" : \"is\"} <b>{city}</b> with an average salary\n        ${this.format(mean - countyMedian)} above the local household median.\n        Median household income is a good proxy for cost of living in an area.{\" \"}\n        <a href=\"https://en.wikipedia.org/wiki/Household_income\">[1]</a>.\n      </span>\n    );\n  }\n\n  get format() {\n    return scaleLinear()\n      .domain(d3extent(this.props.data, d => d.base_salary))\n      .tickFormat();\n  }\n\n  render() {\n    const format = this.format,\n      mean = d3mean(this.props.data, d => d.base_salary),\n      deviation = d3deviation(this.props.data, d => d.base_salary);\n\n    return (\n      <p className=\"lead\">\n        {this.yearsFragment ? this.yearsFragment : \"Since 2012\"} the{\" \"}\n        {this.UStateFragment} tech industry{\" \"}\n        {this.yearsFragment ? \"sponsored\" : \"has sponsored\"}{\" \"}\n        <b>\n          {format(this.props.data.length)} {this.jobTitleFragment}\n        </b>\n        {this.previousYearFragment}. Most of them paid{\" \"}\n        <b>\n          ${format(mean - deviation)} to ${format(mean + deviation)}\n        </b>{\" \"}\n        per year. {this.countyFragment}\n      </p>\n    );\n  }\n}\n\nexport default Description;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nconst MedianLine = ({\n  data,\n  value,\n  width,\n  height,\n  x,\n  y,\n  bottomMargin,\n  median\n}) => {\n  const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, value)])\n      .range([height - y - bottomMargin, 0]),\n    line = d3.line()([[0, 5], [width, 5]]);\n\n  const medianValue = median || d3.median(data, value);\n\n  const translate = `translate(${x}, ${yScale(medianValue)})`,\n    medianLabel = `Median Household is $${yScale.tickFormat()(medianValue)}`;\n\n  return (\n    <g className=\"mean\" transform={translate}>\n      <text\n        x={width - 5}\n        y={0}\n        textAnchor=\"end\"\n        style={{ background: \"purple\" }}\n      >\n        {medianLabel}\n      </text>\n      <path d={line} />\n    </g>\n  );\n};\n\nexport default MedianLine;\n","import React, { Component } from \"react\";\n\nconst Toggle = ({ label, value, name, onClick }) => {\n  let className = \"btn btn-default\";\n\n  if (value) {\n    className += \" btn-primary\";\n  }\n\n  return (\n    <button className={className} onClick={() => onClick(name, !value)}>\n      {label}\n    </button>\n  );\n};\n\nexport default Toggle;\n","import React, { Component } from \"react\";\nimport Toggle from \"./Toggle\";\n\nclass ControlRow extends Component {\n  makePick = (picked, newState) => {\n    this.props.updateDataFilter(picked, !newState);\n  };\n\n  _addToggle(name) {\n    let key = `toggle-${name}`,\n      label = name;\n\n    if (this.props.capitalize) {\n      label = label.toUpperCase();\n    }\n\n    return (\n      <Toggle\n        label={label}\n        name={name}\n        key={key}\n        value={this.props.picked === name}\n        onClick={this.makePick}\n      />\n    );\n  }\n\n  render() {\n    const { toggleNames } = this.props;\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          {toggleNames.map(name => this._addToggle(name))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ControlRow;\n","import React from \"react\";\nimport ControlRow from \"./ControlRow\";\n\nclass Controls extends React.Component {\n  state = {\n    yearFilter: () => true,\n    jobTitleFilter: () => true,\n    USstateFilter: () => true,\n    year: \"*\",\n    jobTitle: \"*\",\n    USstate: \"*\"\n  };\n\n  componentDidMount() {\n    let [year, USstate, jobTitle] = window.location.hash\n      .replace(\"#\", \"\")\n      .split(\"-\");\n\n    if (year !== \"*\" && year) {\n      this.updateYearFilter(Number(year));\n    }\n\n    if (USstate !== \"*\" && USstate) {\n      this.updateUSstateFilter(USstate);\n    }\n\n    if (jobTitle !== \"*\" && jobTitle) {\n      this.updateJobTitleFilter(jobTitle);\n    }\n  }\n\n  updateYearFilter = (year, reset) => {\n    let filter = d => d.submit_date.getFullYear() === year;\n\n    if (reset || !year) {\n      filter = () => true;\n      year = \"*\";\n    }\n\n    this.setState(\n      {\n        yearFilter: filter,\n        year: year\n      },\n      () => this.reportUpdateUpTheChain()\n    );\n  };\n\n  updateJobTitleFilter = (title, reset) => {\n    let filter = d => d.clean_job_title === title;\n\n    if (reset || !title) {\n      filter = () => true;\n      title = \"*\";\n    }\n\n    this.setState(\n      {\n        jobTitleFilter: filter,\n        jobTitle: title\n      },\n      () => this.reportUpdateUpTheChain()\n    );\n  };\n\n  updateUSstateFilter = (USstate, reset) => {\n    let filter = d => d.USstate === USstate;\n\n    if (reset || !USstate) {\n      filter = () => true;\n      USstate = \"*\";\n    }\n\n    this.setState(\n      {\n        USstateFilter: filter,\n        USstate: USstate\n      },\n      () => this.reportUpdateUpTheChain()\n    );\n  };\n\n  reportUpdateUpTheChain() {\n    window.location.hash = [\n      this.state.year || \"*\",\n      this.state.USstate || \"*\",\n      this.state.jobTitle || \"*\"\n    ].join(\"-\");\n\n    this.props.updateDataFilter(\n      (filters => {\n        return d =>\n          filters.yearFilter(d) &&\n          filters.jobTitleFilter(d) &&\n          filters.USstateFilter(d);\n      })(this.state),\n      {\n        year: this.state.year,\n        jobTitle: this.state.jobTitle,\n        USstate: this.state.USstate\n      }\n    );\n  }\n\n  render() {\n    const { data } = this.props;\n\n    const years = new Set(data.map(d => d.submit_date.getFullYear())),\n      jobTitles = new Set(data.map(d => d.clean_job_title)),\n      USstates = new Set(data.map(d => d.USstate));\n\n    return (\n      <div>\n        <ControlRow\n          data={data}\n          toggleNames={Array.from(years.values())}\n          picked={this.state.year}\n          updateDataFilter={this.updateYearFilter}\n        />\n\n        <ControlRow\n          data={data}\n          toggleNames={Array.from(jobTitles.values())}\n          picked={this.state.jobTitle}\n          updateDataFilter={this.updateJobTitleFilter}\n        />\n\n        <ControlRow\n          data={data}\n          toggleNames={Array.from(USstates.values())}\n          picked={this.state.USstate}\n          updateDataFilter={this.updateUSstateFilter}\n          capitalize\n        />\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\nimport Preloader from \"./components/Preloader\";\nimport \"./style.css\";\nimport Histogram from \"./components/Histogram\";\n\nimport { loadAllData } from \"./DataHandling\";\nimport CountyMap from \"./components/CountyMap\";\nimport { Title, Description } from \"./components/Meta\";\nimport MedianLine from \"./components/MedianLine\";\n\nimport Controls from \"./components/Controls\";\n\nclass App extends React.Component {\n  // Insert the line(s) between here...\n  state = {\n    techSalaries: [],\n    medianIncomes: [],\n    countyNames: [],\n    salariesFilter: () => true,\n    filteredBy: {\n      USstate: \"*\",\n      year: \"*\",\n      jobTitle: \"*\"\n    }\n  };\n\n  componentDidMount() {\n    loadAllData(data => this.setState(data));\n  }\n\n  countyValue(county, techSalariesMap) {\n    const medianHousehold = this.state.medianIncomes[county.id],\n      salaries = techSalariesMap[county.name];\n\n    if (!medianHousehold || !salaries) {\n      return null;\n    }\n\n    const median = d3.median(salaries, d => d.base_salary);\n    return {\n      countyID: county.id,\n      value: median - medianHousehold.medianIncome\n    };\n  }\n\n  updateDataFilter = (filter, filteredBy) => {\n    console.log(\"coucou\");\n    this.setState({\n      salariesFilter: filter,\n      filteredBy\n    });\n  };\n\n  render() {\n    const {\n      techSalaries,\n      countyNames,\n      usTopoJson,\n      USstateNames,\n      filteredBy\n    } = this.state;\n\n    if (techSalaries.length < 1) {\n      return <Preloader />;\n    }\n    const filteredSalaries = techSalaries.filter(this.state.salariesFilter),\n      filteredSalariesMap = _.groupBy(filteredSalaries, \"countyID\"),\n      countyValues = countyNames\n        .map(county => this.countyValue(county, filteredSalariesMap))\n        .filter(d => !_.isNull(d));\n\n    let zoom = null,\n      medianHousehold = this.state.medianIncomesByUSState[\"US\"][0].medianIncome;\n\n    if (filteredBy.USstate !== \"*\") {\n      zoom = this.state.filteredBy.USstate;\n      medianHousehold = d3.mean(\n        this.state.medianIncomesByUSState[zoom],\n        d => d.medianIncome\n      );\n    }\n\n    return (\n      <div className=\"App container\">\n        <Title data={filteredSalaries} filteredBy={filteredBy} />\n        <Description\n          data={filteredSalaries}\n          allData={techSalaries}\n          filteredBy={filteredBy}\n          medianIncomesByCounty={this.state.medianIncomesByCounty}\n        />\n        <svg width=\"1100\" height=\"500\">\n          <CountyMap\n            usTopoJson={usTopoJson}\n            USstateNames={USstateNames}\n            values={countyValues}\n            x={0}\n            y={0}\n            width=\"500\"\n            height=\"500\"\n            zoom={null}\n          />\n          <rect\n            x=\"500\"\n            y=\"0\"\n            width=\"600\"\n            height=\"500\"\n            style={{ fill: \"white\" }}\n          />\n          <Histogram\n            bins={10}\n            width={500}\n            height={500}\n            x={500}\n            y={10}\n            data={filteredSalaries}\n            axisMargin={83}\n            bottomMargin={5}\n            value={d => d.base_salary}\n          />\n          <MedianLine\n            data={filteredSalaries}\n            x={500}\n            y={10}\n            height={500}\n            width={600}\n            bottomMargin={5}\n            median={medianHousehold}\n            value={d => d.base_salary}\n          />\n        </svg>\n        <Controls\n          data={techSalaries}\n          updateDataFilter={this.updateDataFilter}\n        />\n      </div>\n    );\n  }\n  // ...and here.\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}